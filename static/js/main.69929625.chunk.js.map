{"version":3,"sources":["Context/DateContext.jsx","Components/Calendar/Header.jsx","Components/Calendar/Dates.jsx","Components/Calendar/index.js","Components/Agenda.jsx","App.jsx","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["DateContext","createContext","selectedDate","setSelectedDate","today","currentDate","setCurrentDate","prevMonth","nextMonth","DateContextProvider","props","useState","Date","Provider","value","children","Header","exit","setExit","useContext","monthYear","format","split","className","onClick","subMonths","addMonths","Dates","selectDay","day","isSameMonth","monthStart","startOfMonth","monthEnd","endOfMonth","startDate","startOfWeek","endDate","endOfWeek","days","formattedDate","rows","flag","i","cloneDay","isSameDay","classNames","push","addDays","dates","WeekDays","map","Calendar","minCal","Agenda","Main","setMinCal","remSize","parseFloat","getComputedStyle","document","documentElement","fontSize","useSpring","marginTop","config","gentle","api","snap","doMinimise","start","immediate","wobbly","stiff","friction","bind","useDrag","last","vy","vxvy","my","movement","cancel","tap","cur","get","delay","filterTaps","div","id","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.69929625.chunk.js","sourcesContent":["import { useState, createContext } from \"react\";\n\nconst DateContext = createContext({\n\tselectedDate: null,\n\tsetSelectedDate: () => {},\n\ttoday: null,\n\tcurrentDate: null,\n\tsetCurrentDate: () => {},\n\tprevMonth: () => {},\n\tnextMonth: () => {},\n});\n\nconst DateContextProvider = (props) => {\n\tconst [selectedDate, setSelectedDate] = useState(new Date());\n\tconst [currentDate, setCurrentDate] = useState(new Date());\n\tconst today = new Date();\n\n\treturn (\n\t\t<DateContext.Provider\n\t\t\tvalue={{\n\t\t\t\tselectedDate,\n\t\t\t\tsetSelectedDate,\n\t\t\t\ttoday,\n\t\t\t\tcurrentDate,\n\t\t\t\tsetCurrentDate,\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</DateContext.Provider>\n\t);\n};\n\nexport { DateContext, DateContextProvider };\n","// Deps\nimport { HiChevronRight, HiChevronLeft } from \"react-icons/hi\";\nimport { format, subMonths, addMonths } from \"date-fns\";\nimport { useContext } from \"react\";\nimport { DateContext } from \"../../Context/DateContext\";\n\nconst Header = ({ exit, setExit }) => {\n\tconst { selectedDate, currentDate, setCurrentDate, setSelectedDate } =\n\t\tuseContext(DateContext);\n\n\tconst dateFormat = \"dd MMM yyyy\";\n\tconst monthYear = format(selectedDate, dateFormat).split(\" \");\n\n\tconst nextMonth = () => {\n\t\tsetCurrentDate(addMonths(currentDate, 1));\n\t\tsetSelectedDate(addMonths(selectedDate, 1));\n\t};\n\tconst prevMonth = () => {\n\t\tsetCurrentDate(subMonths(currentDate, 1));\n\t\tsetSelectedDate(subMonths(selectedDate, 1));\n\t};\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<h3>\n\t\t\t\t{`${monthYear[0]} ${monthYear[1]}`} <span>{`${monthYear[2]}`}</span>\n\t\t\t</h3>\n\t\t\t<div>\n\t\t\t\t<button onClick={prevMonth}>\n\t\t\t\t\t<HiChevronLeft />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={nextMonth}>\n\t\t\t\t\t<HiChevronRight />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Header;\n","// Deps\nimport { useContext } from \"react\";\nimport {\n\tformat,\n\tstartOfMonth,\n\tendOfMonth,\n\tendOfWeek,\n\tstartOfWeek,\n\taddDays,\n\tisSameMonth,\n\tisSameDay,\n} from \"date-fns\";\n// Context\nimport { DateContext } from \"../../Context/DateContext\";\n\nconst Dates = () => {\n\tconst { selectedDate, currentDate, today, setSelectedDate, setCurrentDate } =\n\t\tuseContext(DateContext);\n\n\tconst selectDay = (day) => {\n\t\tsetSelectedDate(day);\n\t\tif (!isSameMonth(day, currentDate)) {\n\t\t\tsetSelectedDate(day);\n\t\t\tsetCurrentDate(day);\n\t\t}\n\t};\n\n\tconst dates = () => {\n\t\tconst monthStart = startOfMonth(currentDate);\n\t\tconst monthEnd = endOfMonth(monthStart);\n\n\t\tconst startDate = startOfWeek(monthStart);\n\t\tconst endDate = endOfWeek(monthEnd);\n\n\t\tconst dateFormat = \"d\";\n\n\t\tlet days = [];\n\t\tlet day = startDate;\n\t\tlet formattedDate = \"\";\n\t\tconst rows = [];\n\n\t\twhile (day <= endDate) {\n\t\t\tlet flag = false;\n\n\t\t\tfor (let i = 0; i < 7; i++) {\n\t\t\t\tconst cloneDay = day;\n\t\t\t\tif (isSameDay(day, selectedDate)) flag = true;\n\t\t\t\tformattedDate = format(day, dateFormat);\n\n\t\t\t\tconst classNames = `day --month${\n\t\t\t\t\tisSameMonth(day, monthStart) ? \"\" : \"-not \"\n\t\t\t\t}${isSameDay(day, selectedDate) ? \" --selected\" : \"\"}${\n\t\t\t\t\tisSameDay(day, today) ? \" --today\" : \"\"\n\t\t\t\t}`;\n\n\t\t\t\tdays.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t\tonClick={() => selectDay(cloneDay)}>\n\t\t\t\t\t\t{formattedDate}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\tday = addDays(day, 1);\n\t\t\t}\n\n\t\t\trows.push(\n\t\t\t\t<div className={`row ${flag ? \"--active\" : \"\"}`} key={day}>\n\t\t\t\t\t{days}\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tdays = [];\n\t\t}\n\t\treturn rows;\n\t};\n\n\treturn <div className={`dates `}>{dates()}</div>;\n};\n\nexport default Dates;\n","// Styles\nimport \"../../styles/Calendar.scss\";\n// Deps\nimport Header from \"./Header\";\nimport Dates from \"./Dates\";\nimport { useState } from \"react\";\n\nconst WeekDays = () => {\n\treturn (\n\t\t<div className=\"row --names\">\n\t\t\t{[\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"].map((day, i) => (\n\t\t\t\t<div key={i} className=\"day --name\">\n\t\t\t\t\t{day}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nfunction Calendar({ minCal }) {\n\tconst [exit, setExit] = useState(\"\");\n\n\treturn (\n\t\t<>\n\t\t\t<div className={`calendar min-${minCal}`}>\n\t\t\t\t<Header setExit={setExit} />\n\t\t\t\t<WeekDays />\n\t\t\t\t<Dates exit={exit} setExit={setExit} minCal={minCal} />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Calendar;\n","import \"../styles/Agenda.scss\";\n\nfunction Agenda() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"header\">\n\t\t\t\t<h5>On This Day</h5>\n\t\t\t\t<hr />\n\t\t\t</div>\n\n\t\t\t<div className=\"events\">\n\t\t\t\t<div className=\"interval\">\n\t\t\t\t\t<span className=\"time\">9:00 AM</span>\n\t\t\t\t\t<div className=\"event\">\n\t\t\t\t\t\t<div className=\"title\">Data Structures And Algorithms</div>\n\t\t\t\t\t\t<div className=\"duration\">45 min</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"event\">\n\t\t\t\t\t\t<div className=\"title\">Code Review</div>\n\t\t\t\t\t\t<div className=\"duration\">15 min</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interval\">\n\t\t\t\t\t<span className=\"time\">10:00 AM</span>\n\t\t\t\t\t<div className=\"event\">\n\t\t\t\t\t\t<div className=\"title\">Robotics</div>\n\t\t\t\t\t\t<div className=\"duration\">30 min</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interval\">\n\t\t\t\t\t<span className=\"time\">11:00 AM</span>\n\t\t\t\t\t<div className=\"event\">\n\t\t\t\t\t\t<div className=\"title\">Hacking</div>\n\t\t\t\t\t\t<div className=\"duration\">40 min</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Agenda;\n","import { useState } from \"react\";\nimport { useSpring, animated, config } from \"@react-spring/web\";\nimport { useDrag } from \"react-use-gesture\";\n\nimport Calendar from \"./Components/Calendar/\";\nimport Agenda from \"./Components/Agenda\";\nimport { DateContextProvider } from \"./Context/DateContext\";\n\nimport { CgMenuGridO } from \"react-icons/cg\";\nimport \"./styles/index.scss\";\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h2>Batch '23</h2>\n\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t<CgMenuGridO />\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<Main />\n\t\t</>\n\t);\n}\nconst Main = () => {\n\tconst [minCal, setMinCal] = useState(false);\n\tconst remSize = parseFloat(\n\t\tgetComputedStyle(document.documentElement).fontSize\n\t);\n\n\t// Springy Stuff\n\tconst [{ marginTop }, api] = useSpring(() => ({\n\t\tmarginTop: \"-5rem\",\n\t\tconfig: config.gentle,\n\t}));\n\n\tconst snap = (doMinimise) => {\n\t\tif (minCal === doMinimise) {\n\t\t\tapi.start({\n\t\t\t\tmarginTop: \"-5rem\",\n\t\t\t\timmediate: !minCal & doMinimise,\n\t\t\t\tconfig: config.wobbly,\n\t\t\t});\n\t\t} else {\n\t\t\tsetMinCal(doMinimise);\n\t\t\tapi.start({\n\t\t\t\tmarginTop: \"-5rem\",\n\t\t\t\timmediate: !minCal & doMinimise,\n\t\t\t\tconfig: { ...config.stiff, friction: 90 },\n\t\t\t});\n\t\t}\n\t};\n\n\tconst bind = useDrag(\n\t\t({ last, vxvy: [, vy], movement: [, my], cancel, tap }) => {\n\t\t\tif (tap) return;\n\t\t\tconst cur = parseFloat(marginTop.get());\n\n\t\t\tif (my > 60 || my < -60) cancel();\n\n\t\t\tif (last) {\n\t\t\t\tif (cur < -8 || vy < -0.3) snap(true);\n\t\t\t\tif (cur >= -8 || vy > 0.3) snap(false);\n\t\t\t} else {\n\t\t\t\tapi.start({\n\t\t\t\t\tmarginTop: `${-5 + my / remSize}rem`,\n\t\t\t\t\timmediate: true,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tdelay: 200,\n\t\t\tfilterTaps: true,\n\t\t}\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<DateContextProvider>\n\t\t\t\t<div className=\"calendar-container\">\n\t\t\t\t\t<Calendar minCal={minCal} />\n\t\t\t\t</div>\n\n\t\t\t\t<animated.div id=\"agenda\" style={{ marginTop }}>\n\t\t\t\t\t<div className=\"resize\" {...bind()}>\n\t\t\t\t\t\t<div />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Agenda />\n\t\t\t\t</animated.div>\n\t\t\t</DateContextProvider>\n\t\t</>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\nreportWebVitals();\n"],"sourceRoot":""}